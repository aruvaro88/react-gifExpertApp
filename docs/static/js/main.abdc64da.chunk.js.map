{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qMA4BeA,EAzBY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAchD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdrB,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,Y,uBCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEHI,MAAMF,GAFH,cAEfG,EAFe,gBAGEA,EAAIC,OAHN,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAThB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEnC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCeGO,EAlBQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDb0BK,CAAa1B,GAAjCa,EAD0B,EAC/BN,KAAaa,EADkB,EAClBA,QAErB,OACE,oCACE,wBAAIJ,UAAU,qCACXhB,GAEFoB,GAAW,uBAAGJ,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEYzBkB,EAvBM,WAAO,IAAD,EACW1C,mBAAS,CAAC,gBADrB,mBAClB2C,EADkB,KACN5C,EADM,KAQzB,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACG4C,EAAWpB,KAAI,SAACqB,GAAD,OACZ,kBAAC,EAAD,CAASH,IAAKG,EAAK9B,SAAU8B,U,MCfzCC,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.abdc64da.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\")\n  const handleChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats])\n      setInputValue(\"\")\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleChange} />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=YAXWZ80SDCQothjL5SiD4DRge0UXDLyX`\n  const res = await fetch(url)\n  const { data } = await res.json()\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n    }\n  })\n\n  return gifs\n}\n","import React from 'react'\n\nexport const GifGridItem = ({id, title,url}) => {\n   \n    return (\n      <div className=\"card animate__animated animate__fadeIn\">\n        <img src={url} alt={title} />\n        <p>{title}</p>\n      </div>\n    )\n}\n","import React from \"react\"\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\nimport { GifGridItem } from \"./GifGridItem\"\n\nexport const GifGrid = ({ category }) => {\n  const { data:images, loading } = useFetchGifs(category)\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">\n        {category}\n      </h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setstate({\n        data: imgs,\n        loading: false,\n      })\n    })\n  }, [category])\n\n  return state\n}\n","import React, { useState } from \"react\"\nimport AddCategory from \"./components/AddCategory\"\nimport GifGrid from \"./components/GifGrid\"\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"Dragon Ball\"])\n\n  //   const handleAdd = () => {\n  //     //setCategories([...categories, \"My Hero Academia\"])\n  //     setCategories((cats) => [...cats, \"My Hero Academia\"])\n  //   }\n\n  return (\n    <>\n      <h2>Gif Expert App</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((cat) => (\n            <GifGrid key={cat} category={cat} />\n        ))}\n      </ol>\n    </>\n  )\n}\n\nexport default GifExpertApp\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport GifExpertApp from \"./GifExpertApp\"\nimport \"./index.css\"\n\nReactDOM.render(\n  <GifExpertApp />,\n\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}